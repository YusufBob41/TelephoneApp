<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAASTSURBVHhe7Z09bxRXFIatRPBjaGEGU2bGpkMxBJMCBdEg
        LEr+AB0C4oomRUoQkfhGNFHkmhJKDE5AQAGyBRKe2UWOgYvO2lcw7921mbnvvbMw55GeZhf7zDxH3p2V
        0M7EhKIoiqIoiqIoiqIoiqLUwMzu2lnke34t8+RKmaeLRZaWZZ6a78nNc1qUcyymkiNyztihFVbzvb8U
        WfofHnAH/Hd1as8h7BENMzv7Y5mn80MOrFMWefK7OTPxA/YJjsb/bJEn57FPUORlBw+i6/aydAY7BUHe
        fOT1Dw+g6xZZ8iTKG/PG1Y57AOrgSmkWe9Ep8+QvHKxumqWXsRedMkseO4NV6yL2olPmSTFksDowKbAX
        HXeo+qXYiw4OVKtiLzo4UK2KvejgQLUq9qKDA9Wq2IsODmTYm5ky5fSk8/i3KPaigwN97R3cbz7cf2DW
        794x5f59zvMh7M/9NhAfZ4i96OBAH218s/JmYIwl9E8cNR+fPjcfn70w/bljzvO+Yi86OLCpGD/GEmx8
        OyvEErAXHRzYxFHxQy4B44daAvaigwPrul38EEsYFT/EErAXHRxY1////MMJMMr12ze9r462i29lLQF7
        0cGBtZ2eNOs3rjkBRunzl/C18cWNBfhfGWEvOjiwkRGW0EZ8EXvRwYGNDbiEtuKL2IsODvQywBLajC9i
        Lzo40FviEtqOL2IvOjiQImEJ4xBfxF50cCBNjyWMS3wRe9HBgVQbLKF/8tjYxBexFx0cSLfmEszLZfex
        IcaIL2IvOjgwiHWXsI2x4ovYiw4ODCZpCTHji9iLDg4MqucSYscXsRcdHBjchktoI76IvejgwChOT5r3
        //ztRB7pqxXTP3Xc/T0RxF50cGAM61znW4d9WIsh9qKDA0PbJH6bS8BedHBgSH3it7UE7EUHB4aSEd8a
        cwnYiw4ODCEzvjXWErAXHRzItk58udSsc3UUYwnYiw4OZFo3/uA6f/A54arz/ChDLwF70cGBLBvFtz8/
        RkvAXnRwIEOv+NYxWQL2ooMDfaXEt47BErAXHRzoIzW+teUlYC86OLCpQeJbW1wC9qKDA5sYNL61pSVg
        Lzo4sK5R4ltlCbeuO793lIP/izq11/09NcRedHBgXd8vLDgnPkzv+NYafwlrF+fdn68p9qKDA+vaO/CT
        +XDvnnPyQeJbv2IJjPgi9qKDA5u41RLo8a1bLIEVX8RedHBgU4ctIVh8Ky5h+bVZmz/r/jsPsRcdHOjj
        l0sIHt9qlxAgvoi96OBAX2UJ8sYcJb51etK8O33KfZwg9qKDA9Wq2IsODlSrYi86OFCtir3o4EC1Kvai
        gwPVqtiLDg5Uq2IvOvqlfVuYJW+xF50ySx85g9UNs/Qh9qKzeY8Ad7gqXsJedOTmBUMGq3lqVrP0MPai
        Y3bv3lHmyRIO77pyE4soX94tyJ0j8AC6bi9Pf8ZOQZE7R+BBdNUiT89hn+DIbTuKLLmAB9M15e4ZrdzC
        xCJ3jujme0KyFP1lZxTyxiw3L5Dvz5dr4e/zw1pSDM4tSy/L1Y6cM3ZQFEVRFEVRFEVRFEVRlK34BLx+
        UbciGh7EAAAAAElFTkSuQmCC
</value>
  </data>
</root>